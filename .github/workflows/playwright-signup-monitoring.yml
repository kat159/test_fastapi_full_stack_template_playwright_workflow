name: Playwright Signup Monitoring

on:
  schedule:
    # Run every 2 hours
    - cron: '0 */2 * * *'
  workflow_dispatch:
    inputs:
      website_url:
        description: 'Website URL to test'
        required: false
        default: ''

jobs:
  playwright-signup-test:
    runs-on: ubuntu-latest
    timeout-minutes: 10
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Set up Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20'
        
    - name: Install Playwright
      run: |
        npm install playwright
        npx playwright install chromium
        
    - name: Run Playwright signup test
      run: |
        cd .github/scripts
        node playwright-signup-test.js
      env:
        WEBSITE_URL: ${{ github.event.inputs.website_url || secrets.WEBSITE_URL || 'https://denistek.online' }}
        
    - name: Check for screenshot file
      if: failure()
      run: |
        cd .github/scripts
        if [ -f "signup-failure.png" ]; then
          echo "Screenshot file found: signup-failure.png"
          ls -la signup-failure.png
        else
          echo "Screenshot file not found"
          echo "Creating placeholder file for artifact upload"
          echo "Screenshot capture failed during test execution" > signup-failure.txt
        fi
        
    - name: Upload screenshot on failure
      if: failure()
      uses: actions/upload-artifact@v4
      with:
        name: signup-failure-screenshot-${{ github.run_number }}
        path: |
          .github/scripts/signup-failure.png
          .github/scripts/signup-failure.txt
          .github/scripts/signup-debug.png
        retention-days: 7
        if-no-files-found: warn
        
    - name: Notify success
      if: success()
      run: |
        echo "‚úÖ Playwright signup test PASSED!"
        echo "Registration functionality is working correctly"
        
    - name: Send Slack notification on success
      if: success()
      run: |
        TIMESTAMP=$(date -u +"%Y-%m-%d %H:%M:%S UTC")
        WEBSITE_URL="${{ github.event.inputs.website_url || secrets.WEBSITE_URL || 'https://denistek.online' }}"
        
        curl -X POST -H 'Content-type: application/json' \
        --data "{
          \"text\": \"‚úÖ Playwright Signup Test PASSED\",
          \"blocks\": [
            {
              \"type\": \"section\",
              \"text\": {
                \"type\": \"mrkdwn\",
                \"text\": \"*‚úÖ Playwright Signup Test PASSED*\n\nüì± Website: \`${WEBSITE_URL}\`\nüïê Time: \`${TIMESTAMP}\`\nüìß Test Email: \`playwright@test.com\`\n\n*Registration functionality is working correctly!*\"
              }
            },
            {
              \"type\": \"context\",
              \"elements\": [
                {
                  \"type\": \"mrkdwn\",
                  \"text\": \"üîó <https://github.com/${{ github.repository }}/actions/runs/${{ github.run_id }}|View workflow run>\"
                }
              ]
            }
          ]
        }" \
        ${{ secrets.SLACK_WEBHOOK_URL_FOR_MONITORING }}
        
    - name: Notify failure  
      if: failure()
      run: |
        echo "üö® Playwright signup test FAILED!"
        echo "Check the logs and screenshots for details"
        
    - name: Send Slack notification on failure
      if: failure()
      run: |
        TIMESTAMP=$(date -u +"%Y-%m-%d %H:%M:%S UTC")
        WEBSITE_URL="${{ github.event.inputs.website_url || secrets.WEBSITE_URL || 'https://denistek.online' }}"
        
        curl -X POST -H 'Content-type: application/json' \
        --data "{
          \"text\": \"üö® Playwright Signup Test FAILED\",
          \"blocks\": [
            {
              \"type\": \"section\",
              \"text\": {
                \"type\": \"mrkdwn\",
                \"text\": \"*üö® Playwright Signup Test FAILED*\n\nüì± Website: \`${WEBSITE_URL}\`\nüïê Time: \`${TIMESTAMP}\`\nüìß Test Email: \`playwright@test.com\`\n\n*‚ùå Registration functionality is not working properly!*\"
              }
            },
            {
              \"type\": \"section\",
              \"text\": {
                \"type\": \"mrkdwn\",
                \"text\": \"üì∏ Screenshots and logs available in workflow artifacts\"
              }
            },
            {
              \"type\": \"context\",
              \"elements\": [
                {
                  \"type\": \"mrkdwn\",
                  \"text\": \"üîó <https://github.com/${{ github.repository }}/actions/runs/${{ github.run_id }}|View workflow run> | üìÅ <https://github.com/${{ github.repository }}/actions/runs/${{ github.run_id }}#artifacts|Download artifacts>\"
                }
              ]
            }
          ]
        }" \
        ${{ secrets.SLACK_WEBHOOK_URL_FOR_MONITORING }}
